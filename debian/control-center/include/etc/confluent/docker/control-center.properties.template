
{# required properties #}
bootstrap.servers={{env['CONTROL_CENTER_BOOTSTRAP_SERVERS']}}
zookeeper.connect={{env['CONTROL_CENTER_ZOOKEEPER_CONNECT']}}
confluent.controlcenter.data.dir={{env['CONTROL_CENTER_DATA_DIR']}}
confluent.monitoring.interceptor.topic.replication={{env.get('CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION', env['CONTROL_CENTER_REPLICATION_FACTOR'])}}
confluent.controlcenter.internal.topics.replication={{env.get('CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION', env['CONTROL_CENTER_REPLICATION_FACTOR'])}}

{# optional properties #}
{% set other_props = {
    'CONTROL_CENTER_ID': 'confluent.controlcenter.id',
    'CONTROL_CENTER_NAME': 'confluent.controlcenter.name',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC': 'confluent.monitoring.interceptor.topic',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS': 'confluent.monitoring.interceptor.topic.partitions',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_RETENTION_MS': 'confluent.monitoring.interceptor.topic.retention.ms',
    'CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS': 'confluent.controlcenter.internal.topics.partitions',
    'CONTROL_CENTER_INTERNAL_TOPICS_RETENTION_MS': 'confluent.controlcenter.internal.topics.retention.ms',
    'CONTROL_CENTER_INTERNAL_TOPICS_CHANGELOG_SEGEMENT_BYTES': 'confluent.controlcenter.internal.topics.changelog.segment.bytes',
    'CONTROL_CENTER_LICENSE': 'confluent.controlcenter.license',
} -%}

{% for k, property in other_props.iteritems() -%}
{% if env.get(k) != None -%}
{{property}}={{env[k]}}
{% endif -%}
{% endfor -%}

{% set streams_props = env_to_props('CONTROL_CENTER_CONNECT_', 'confluent.controlcenter.connect.', exclude=other_props.keys()) -%}
{% for name, value in streams_props.iteritems() -%}
{{name}}={{value}}
{% endfor -%}

{% set streams_props = env_to_props('CONTROL_CENTER_STREAMS_', 'confluent.controlcenter.streams.', exclude=other_props.keys()) -%}
{% for name, value in streams_props.iteritems() -%}
{{name}}={{value}}
{% endfor -%}

{% set rest_props = env_to_props('CONTROL_CENTER_REST_', 'confluent.controlcenter.rest.', exclude=other_props.keys()) -%}
{% for name, value in rest_props.iteritems() -%}
{{name}}={{value}}
{% endfor -%}

{% set rest_props = env_to_props('CONTROL_CENTER_MAIL_', 'confluent.controlcenter.mail.', exclude=other_props.keys()) -%}
{% for name, value in rest_props.iteritems() -%}
{{name}}={{value}}
{% endfor -%}
