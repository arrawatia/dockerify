
{# required properties #}
bootstrap.servers={{env['CONTROL_CENTER_BOOTSTRAP_SERVERS']}}
zookeeper.connect={{env['CONTROL_CENTER_ZOOKEEPER_CONNECT']}}
confluent.controlcenter.data.dir={{env['CONTROL_CENTER_DATA_DIR']}}
confluent.monitoring.interceptor.topic.replication={{env.get('CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION', env['CONTROL_CENTER_REPLICATION_FACTOR'])}}
confluent.controlcenter.internal.topics.replication={{env.get('CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION', env['CONTROL_CENTER_REPLICATION_FACTOR'])}}

{# TODO - We need to prevent collisions with CONTROL_CENTER_OPTS #}

{# optional properties #}
{% set other_props = {
    'CONTROL_CENTER_CONNECT_CLUSTER': 'confluent.controlcenter.connect.cluster',
    'CONTROL_CENTER_LICENSE': 'confluent.controlcenter.license',
    'CONTROL_CENTER_REST_LISTENERS': 'confluent.controlcenter.rest.listeners',
    'CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS': 'confluent.controlcenter.streams.num.stream.threads',
    'CONTROL_CENTER_ID': 'confluent.controlcenter.id',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC': 'confluent.monitoring.interceptor.topic',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS': 'confluent.monitoring.interceptor.topic.partitions',
    'CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_RETENTION_MS': 'confluent.monitoring.interceptor.topic.retention.ms',
    'CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS': 'confluent.controlcenter.internal.topics.partitions',
    'CONTROL_CENTER_INTERNAL_TOPICS_RETENTION_MS': 'confluent.controlcenter.internal.topics.retention.ms',
    'CONTROL_CENTER_INTERNAL_TOPICS_CHANGELOG_SEGEMENT_BYTES': 'confluent.controlcenter.internal.topics.changelog.segment.bytes',
    'CONTROL_CENTER_NAME': 'confluent.controlcenter.name',
    'CONTROL_CENTER_CONNECT_TIMEOUT': 'confluent.controlcenter.connect.timeout',

    '': 'confluent.controlcenter.streams.ssl.*',
    '': 'confluent.controlcenter.streams.sasl.*',
    '': 'confluent.controlcenter.rest.ssl',
 } -%}

 {% for k, property in other_props.iteritems() -%}
 {% if env.get(k) != None -%}
 {{property}}={{env[k]}}
 {% endif -%}
 {% endfor -%}
