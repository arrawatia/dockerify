{# TODO: Worker configs can override any consumer/producer configs, we should create a base consumer/producer template to extend  #}

{# Required  properties #}
bootstrap.servers={{env['CONNECT_BOOTSTRAP_SERVERS']}}
rest.port={{env['CONNECT_REST_PORT']}}
rest.advertised.host.name={{env['CONNECT_REST_ADVERTISED_HOST_NAME']}}
group.id={{env['CONNECT_GROUP_ID']}}
config.storage.topic={{env['CONNECT_CONFIG_STORAGE_TOPIC']}}
offset.storage.topic={{env['CONNECT_OFFSET_STORAGE_TOPIC']}}
status.storage.topic={{env['CONNECT_STATUS_STORAGE_TOPIC']}}
key.converter={{env['CONNECT_KEY_CONVERTER']}}
value.converter={{env['CONNECT_VALUE_CONVERTER']}}
internal.key.converter={{env['CONNECT_INTERNAL_KEY_CONVERTER']}}
internal.value.converter={{env['CONNECT_INTERNAL_VALUE_CONVERTER']}}


{# optional properties #}
{% set other_props = {
	'CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL': 'key.converter.schema.registry.url',
	'CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL': 'value.converter.schema.registry.url',
	'CONNECT_INTERNAL_KEY_CONVERTER_SCHEMA_REGISTRY_URL': 'internal.key.converter.schema.registry.url',
	'CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMA_REGISTRY_URL': 'internal.value.converter.schema.registry.url',
	'CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE' : 'internal.key.converter.schemas.enable',
	'CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE' : 'internal.value.converter.schemas.enable',
	'CONNECT_OFFSET_FLUSH_INTERVAL_MS': 'offset.flush.interval.ms',
	'CONNECT_OFFSET_FLUSH_TIMEOUT_MS': 'offset.flush.timeout.ms',
	'CONNECT_REST_HOST_NAME': 'rest.host.name',
	'CONNECT_REST_ADVERTISED_PORT': 'rest.advertised.port',
	'CONNECT_TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS': 'task.shutdown.graceful.timeout.ms',
	'CONNECT_HEARTBEAT_INTERVAL_MS': 'heartbeat.interval.ms',
	'CONNECT_SESSION_TIMEOUT_MS': 'session.timeout.ms',
	'CONNECT_CONNECTIONS_MAX_IDLE_MS': 'connections.max.idle.ms',
	'CONNECT_RECEIVE_BUFFER_BYTES': 'receive.buffer.bytes',
	'CONNECT_REQUEST_TIMEOUT_MS': 'request.timeout.ms',
	'CONNECT_SECURITY_PROTOCOL': 'security.protocol',
	'CONNECT_SEND_BUFFER_BYTES': 'send.buffer.bytes',
	'CONNECT_WORKER_SYNC_TIMEOUT_MS': 'worker.sync.timeout.ms',
	'CONNECT_WORKER_UNSYNC_BACKOFF_MS': 'worker.unsync.backoff.ms',
	'CONNECT_CLIENT_ID': 'client.id',
	'CONNECT_METADATA_MAX_AGE_MS': 'metadata.max.age.ms',
	'CONNECT_METRIC_REPORTERS': 'metric.reporters',
	'CONNECT_METRICS_NUM_SAMPLES': 'metrics.num.samples',
	'CONNECT_METRICS_SAMPLE_WINDOW_MS': 'metrics.sample.window.ms',
	'CONNECT_RECONNECT_BACKOFF_MS': 'retry.backoff.ms'
 } -%}


{# Add these for security
ssl.key.password
ssl.keystore.location
ssl.keystore.password
ssl.truststore.location
ssl.truststore.password
sasl.kerberos.service.name
security.protocol
ssl.enabled.protocols
ssl.keystore.type
ssl.protocol
ssl.provider
ssl.truststore.type
sasl.kerberos.kinit.cmd
sasl.kerberos.min.time.before.relogin
sasl.kerberos.ticket.renew.jitter
sasl.kerberos.ticket.renew.window.factor
ssl.cipher.suites
ssl.endpoint.identification.algorithm
ssl.keymanager.algorithm
ssl.keymanager.algorithm
#}

{% for k, property in other_props.iteritems() -%}
{% if env.get(k) != None -%}
{{property}}={{env[k]}}
{% endif -%}
{% endfor -%}
